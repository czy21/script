
map $uri $fido_content_type {
default "application/fido.trusted-apps+json";
}

server {
  http2 on;
  listen 443 ssl;
  server_name bitwarden.czy21-internal.com;

  ssl_certificate     /etc/nginx/cert/czy21-internal.com.crt;
  ssl_certificate_key /etc/nginx/cert/czy21-internal.com.key;

  ssl_session_timeout 30m;
  ssl_session_cache shared:SSL:20m;
  ssl_session_tickets off;

  ssl_protocols TLSv1.2;
  ssl_ciphers "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256";
  # Enables server-side protection from BEAST attacks
  ssl_prefer_server_ciphers on;

  # OCSP Stapling ---
  # Fetch OCSP records from URL in ssl_certificate and cache them
  ssl_stapling on;
  ssl_stapling_verify on;

  # Verify chain of trust of OCSP response using Root CA and Intermediate certs
  ssl_trusted_certificate /etc/nginx/cert/ca.crt;
  resolver 1.1.1.1 1.0.0.1 9.9.9.9 149.112.112.112 valid=300s;

  include /etc/nginx/conf.d/security-headers-ssl.conf;
  include /etc/nginx/conf.d/security-headers.conf;

  location / {
    proxy_pass http://bitwarden-web:5000/;
    include /etc/nginx/conf.d/security-headers-ssl.conf;
    include /etc/nginx/conf.d/security-headers.conf;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'wasm-unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https://haveibeenpwned.com; child-src 'self' https://*.duosecurity.com https://*.duofederal.com; frame-src 'self' https://*.duosecurity.com https://*.duofederal.com; connect-src 'self' wss://bitwarden.czy21-internal.com https://api.pwnedpasswords.com https://api.2fa.directory; object-src 'self' blob:;";
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-Robots-Tag "noindex, nofollow";
  }

  location /alive {
    return 200 'alive';
    add_header Content-Type text/plain;
  }

  location = /app-id.json {
    proxy_pass http://bitwarden-web:5000/app-id.json;
    include /etc/nginx/conf.d/security-headers-ssl.conf;
    include /etc/nginx/conf.d/security-headers.conf;
    proxy_hide_header Content-Type;
    add_header Content-Type $fido_content_type;
  }

  location = /duo-connector.html {
    proxy_pass http://bitwarden-web:5000/duo-connector.html;
  }

  location = /webauthn-connector.html {
    proxy_pass http://bitwarden-web:5000/webauthn-connector.html;
  }

  location = /webauthn-fallback-connector.html {
    proxy_pass http://bitwarden-web:5000/webauthn-fallback-connector.html;
  }

  location = /sso-connector.html {
    proxy_pass http://bitwarden-web:5000/sso-connector.html;
  }


  location /attachments/ {
    proxy_pass http://bitwarden-attachments:5000/;
  }

  location /api/ {
    proxy_pass http://bitwarden-api:5000/;
  }

  location /icons/ {
    proxy_pass http://bitwarden-icons:5000/;
  }

  location /notifications/ {
    proxy_pass http://bitwarden-notifications:5000/;
  }

  location /notifications/hub {
    proxy_pass http://bitwarden-notifications:5000/hub;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $http_connection;
  }

  location /notifications/anonymous-hub {
    proxy_pass http://bitwarden-notifications:5000/anonymous-hub;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $http_connection;
  }

  location /events/ {
    proxy_pass http://bitwarden-events:5000/;
  }

  location /sso {
    proxy_pass http://bitwarden-sso:5000;
    include /etc/nginx/conf.d/security-headers-ssl.conf;
    include /etc/nginx/conf.d/security-headers.conf;
    add_header X-Frame-Options SAMEORIGIN;
  }

  location /identity {
    proxy_pass http://bitwarden-identity:5000;
    include /etc/nginx/conf.d/security-headers-ssl.conf;
    include /etc/nginx/conf.d/security-headers.conf;
    add_header X-Frame-Options SAMEORIGIN;
  }

  location /admin {
    proxy_pass http://bitwarden-admin:5000;
    include /etc/nginx/conf.d/security-headers-ssl.conf;
    include /etc/nginx/conf.d/security-headers.conf;
    add_header X-Frame-Options SAMEORIGIN;
  }

}