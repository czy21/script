version: "3.9"

{%- set es_setup_name = param_db_es_cluster_name + '-setup' %}

x-es-common: &es-common
  image: elasticsearch:{{ param_db_es_version }}

x-traefik-es-label: &traefik-es-label
  traefik.enable: true
  traefik.http.routers.{{ param_db_es_cluster_name }}.rule: Host(`{{ param_db_es_host }}`)
  traefik.http.routers.{{ param_db_es_cluster_name }}.service: {{ param_db_es_cluster_name }}
  traefik.http.services.{{ param_db_es_cluster_name }}.loadbalancer.server.port: 9200

x-traefik-kb-label: &traefik-kb-label
  traefik.enable: true
  traefik.http.routers.{{ param_db_es_kb_name }}.rule: Host(`{{ param_db_kb_host }}`)
  traefik.http.routers.{{ param_db_es_kb_name }}.service: {{ param_db_es_kb_name }}
  traefik.http.services.{{ param_db_es_kb_name }}.loadbalancer.server.port: 5601

services:
  {{ es_setup_name }}:
    <<: *es-common
    container_name: {{ es_setup_name }}
    command: sh ./setup.sh
    user: "0"
    working_dir: /usr/share/elasticsearch
    volumes:
      - {{ param_docker_data }}/{{ param_db_es_cluster_name }}/conf/setup.sh:/usr/share/elasticsearch/setup.sh
      - {{ param_docker_data }}/{{ param_db_es_cluster_name }}/conf/instance.yml/:/usr/share/elasticsearch/config/instance.yml
      - {{ param_docker_data }}/{{ param_db_es_cluster_name }}/cert/:{{ param_db_es_target_cert_path }}/
      - {{ param_docker_data }}/{{ param_db_es_cluster_name }}/data/:/usr/share/elasticsearch/data/
    healthcheck:
      test: ["CMD-SHELL", "[ -f {{ param_db_es_target_cert_path }}/{{ param_db_es_first_node_name }}/{{ param_db_es_first_node_name }}.crt ]"]
      interval: 1s
      timeout: 5s
      retries: 120
  {% set es_node_names=[] %}
  {%- for i in range(1,param_db_es_cluster_replicas | int + 1) %}
    {%- set es_node_name = param_db_es_cluster_name + '-' + i | string %}
    {{- es_node_names.append(es_node_name) or '' }}
  {{ es_node_name }}:
    <<: *es-common
    container_name: {{ es_node_name }}
    hostname: {{ es_node_name }}
    labels:
      <<: *traefik-es-label
    expose:
      - "9200"
    environment:
      node.name: {{ es_node_name }}
      cluster.name: {{ param_db_es_cluster_name }}
      {%- set seed_hosts=[] %}
      {%- set initial_master_nodes=[] %}
      {%- for t in range(1,param_db_es_cluster_replicas | int + 1) %}
         {%- set t_es_node_name = '-'.join([param_db_es_cluster_name,t|string]) %}
        {%- if t_es_node_name != es_node_name %}
          {{- seed_hosts.append(t_es_node_name) or '' }}
        {%- endif %}
        {{- initial_master_nodes.append(t_es_node_name) or '' }}
      {%- endfor %}
      discovery.seed_hosts: {{ seed_hosts | join(',') }}
      cluster.initial_master_nodes: {{ initial_master_nodes | join(',') }}
      bootstrap.memory_lock: "true"
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      ELASTIC_PASSWORD: {{ param_db_es_password }}
      xpack.security.enabled: true
      xpack.security.http.ssl.enabled: false
      xpack.security.transport.ssl.enabled: true
      xpack.security.transport.ssl.verification_mode: certificate
      xpack.security.transport.ssl.certificate_authorities: {{ param_db_es_target_cert_path }}/ca/ca.crt
      xpack.security.transport.ssl.certificate: {{ param_db_es_target_cert_path }}/{{ es_node_name }}/{{ es_node_name }}.crt
      xpack.security.transport.ssl.key: {{ param_db_es_target_cert_path }}/{{ es_node_name }}/{{ es_node_name }}.key
      xpack.security.authc.realms.file.file1.order: 0
      xpack.monitoring.collection.enabled: true
    volumes:
      - {{ param_docker_data }}/{{ param_db_es_cluster_name }}/conf/users:/usr/share/elasticsearch/config/users
      - {{ param_docker_data }}/{{ param_db_es_cluster_name }}/conf/users_roles:/usr/share/elasticsearch/config/users_roles
      - {{ param_docker_data }}/{{ param_db_es_cluster_name }}/data/{{ i }}/:/usr/share/elasticsearch/data/
      - {{ param_docker_data }}/{{ param_db_es_cluster_name }}/cert/:{{ param_db_es_target_cert_path }}/
    ulimits:
      memlock:
        soft: -1
        hard: -1
    depends_on:
    {%- if i == 1 %}
      {{ es_setup_name }}:
        condition: service_healthy
    {%- else %}
      - {{ param_db_es_cluster_name + '-' + (i|int-1) | string }}
    {%- endif %}
    healthcheck:
      test: ["CMD-SHELL","curl -s http://localhost:9200 | grep -q 'missing authentication credentials'"]
      interval: 10s
      timeout: 10s
      retries: 120
  {%- endfor %}
  {{ param_db_es_kb_name }}:
    image: kibana:{{ param_db_es_version }}
    container_name: {{ param_db_es_kb_name }}
    labels:
      <<: *traefik-kb-label
    expose:
      - "5601"
    volumes:
      - {{ param_docker_data }}/{{ param_db_es_cluster_name }}/conf/kibana.yml:/usr/share/kibana/config/kibana.yml
    healthcheck:
      test: ["CMD-SHELL","curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'"]
      interval: 10s
      timeout: 10s
      retries: 120