- name: docker install
  become: yes
  shell: |
    sudo mkdir -p /etc/systemd/system/docker.service.d/
    sudo tee /etc/systemd/system/docker.service.d/docker.conf <<-'EOF'
    [Service]
    ExecStart=
    ExecStart=/usr/bin/dockerd
    EOF
    sudo mkdir -p /etc/docker/
    sudo cat {{ param_remote_role_path }}/daemon.json > /etc/docker/daemon.json
    if [ "{{ param_ansible_distribution }}" == "debian" ];then
      sh {{ param_remote_role_path }}/ubuntu.sh
    else
      sh {{ param_remote_role_path }}/{{ param_ansible_distribution }}.sh
    fi
  tags:
    - '{{ param_role_name }}'

- name: docker buildx
  become: yes
  shell: |
    sudo mkdir -p /etc/buildkit/
    sudo cat {{ param_remote_role_path }}/buildkitd.toml > /etc/buildkit/buildkitd.toml
    # docker buildx create --use --bootstrap --name container --driver docker-container --config /etc/buildkit/buildkitd.toml
  tags:
    - '{{ param_role_name }}-plugin'

- name: docker compose
  become: yes
  shell: |
    sudo mkdir -p /usr/local/lib/docker/cli-plugins/
    sudo curl -L "https://github.com/docker/compose/releases/download/v{{ param_compose_version }}/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/lib/docker/cli-plugins/docker-compose
    sudo chmod +x /usr/local/lib/docker/cli-plugins/docker-compose
    sudo ln -sf /usr/local/lib/docker/cli-plugins/docker-compose /usr/bin/docker-compose
  tags:
    - '{{ param_role_name }}-plugin'