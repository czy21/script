- name: k8s
  become: yes
  import_tasks: install.yml
  tags:
    - '{{ param_role_name }}'

- name: hosts init
  become: yes
  shell: sudo cat {{ param_remote_role_path }}/hosts-{{ ansible_distribution | lower}} > /etc/hosts
  tags:
    - 'k8s-init-etcd'
    - 'k8s-init-kube'

- name: etcd init
  import_tasks: init-etcd.yml
  tags:
    - 'k8s-init-etcd'

- name: kubeadm init
  import_tasks: init-kube.yml
  tags:
    - 'k8s-init-kube'

- name: worker join
  become: yes
  shell: kubeadm join 192.168.2.25:6443 --token 1nk6u8.rx29jnazce7k2bdv --discovery-token-ca-cert-hash sha256:8697700c2ce96f42f04c80db32937a3c9ed0b621dfe4be3ed9c139d30c8c20fc
  when: "'worker' in group_names"
  tags:
    - 'k8s-join'

- name: master backup
  shell: |
    bak_path={{ param_remote_role_path }}/{{ param_k8s_backup_name }}
    sudo rm -rf ${bak_path} && mkdir -p ${bak_path}
    etcd_pod_name=$(kubectl -n kube-system get pod -o 'name' | grep 'etcd')
    kubectl -n kube-system exec -it ${etcd_pod_name} -- \
      etcdctl \
        --endpoints="https://127.0.0.1:2379" \
        --cert="/etc/kubernetes/pki/etcd/server.crt" \
        --key="/etc/kubernetes/pki/etcd/server.key" \
        --cacert="/etc/kubernetes/pki/etcd/ca.crt" \
        snapshot save /var/lib/etcd/etcd.db.bak
    sudo cp --parents -rv /etc/kubernetes/ /var/lib/kubelet/ /var/lib/etcd/etcd.db.bak ${bak_path}/
    sh -c 'cd {{ param_remote_role_path }} && sudo tar -pzcvf {{ param_k8s_backup_name }}.tar.gz {{ param_k8s_backup_name }}'
    sudo rm -rf ${bak_path}
  when: "'master' in group_names"
  tags:
    - 'k8s-backup'

- name: fetch backup
  fetch: src={{ param_remote_role_path }}/{{ param_k8s_backup_name }}.tar.gz dest=___temp/{{ param_k8s_backup_name }}.tar.gz flat=yes
  when: "'master' in group_names"
  tags:
    - 'k8s-backup'

#- name: push backup
#  copy: src=___temp/{{ param_k8s_backup_name }}.tar.gz dest={{ param_remote_role_path }}/
#  when: "'master' in group_names"
#  tags:
#    - 'k8s-restore'

- name: master restore
  shell: |
    echo 'restore'
    # sudo tar -zxvf {{ param_remote_role_path }}/{{ param_k8s_backup_name }}.tar.gz --strip-components 1 -C /
    # etcd_pod_name=$(kubectl -n kube-system get pod -o 'name' | grep 'etcd')
    # kubectl -n kube-system exec -it ${etcd_pod_name} -- \
    #   etcdctl \
    #     --endpoints="https://127.0.0.1:2379" \
    #     --cert="/etc/kubernetes/pki/etcd/server.crt" \
    #     --key="/etc/kubernetes/pki/etcd/server.key" \
    #     --cacert="/etc/kubernetes/pki/etcd/ca.crt" \
    #     snapshot restore /var/lib/etcd/etcd.db.bak
  when: "'master' in group_names"
  tags:
    - 'k8s-restore'