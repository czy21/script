- name: fcos build
  file: path={{ role_path }}/build state=directory mode=0777

- name: fcos build ignition.yml
  template: src=fcos-ignition.yml dest={{ role_path }}/build/fcos-ignition-{{ item.name }}.yml
  with_items: "{{ param_vsphere_k8s_coreos_network_ips }}"

- name: fcos build ignition.json
  shell: cat {{ role_path }}/build/fcos-ignition-{{ item.name }}.yml | docker run --rm -i coreos/butane:release > {{ role_path }}/build/fcos-ignition-{{ item.name }}.json
  with_items: "{{ param_vsphere_k8s_coreos_network_ips }}"

- name: fcos create
  shell: |
    {{ param_vsphere_ovftool_home }}/ovftool --noSSLVerify --powerOffTarget \
    --name={{ item.name }} \
    --datastore={{ param_vsphere_datastore }} \
    --net:"VM Network={{ param_vsphere_network }}" \
    --allowExtraConfig \
    --extraConfig:guestinfo.ignition.config.data.encoding=base64 \
    --extraConfig:guestinfo.ignition.config.data=$(cat {{ role_path }}/build/fcos-ignition-{{ item.name }}.json | base64 --wrap=0) \
    --extraConfig:guestinfo.afterburn.initrd.network-kargs=ip={{ item.ip }}::{{ param_vsphere_k8s_coreos_network_gateway }}:255.255.255.0:{{ item.name }}:ens192:off:{{ param_vsphere_k8s_coreos_network_gateway }} \
    {{ param_vsphere_k8s_fcos_ova }} 'vi:///{{ param_vsphere_uri }}'
  with_items: "{{ param_vsphere_k8s_coreos_network_ips }}"