---
apiVersion: v1
kind: Service
metadata:
  name: '{{ .Chart.Name }}'
  namespace: '{{ .Values.namespace }}'
spec:
  selector:
    app: '{{ .Chart.Name }}'
  type: NodePort
  ports:
  - name: '5672'
    port: 5672
    targetPort: 5672
    nodePort: 5672
  - name: '15672'
    port: 15672
    targetPort: 15672
    nodePort: 15672
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: '{{ .Chart.Name }}'
  namespace: '{{ .Values.namespace }}'
spec:
  selector:
    matchLabels:
      app: '{{ .Chart.Name }}'
  serviceName: '{{ .Chart.Name }}'
  template:
    metadata:
      labels:
        app: '{{ .Chart.Name }}'
    spec:
      volumes:
      - name: conf
        configMap:
          name: '{{ .Chart.Name }}'
      - name: data
        persistentVolumeClaim:
          claimName: data-rabbitmq
      containers:
      - name: '{{ .Chart.Name }}'
        image: rabbitmq:3-management
        ports:
        - containerPort: 5672
        - containerPort: 15672
        env:
        - name: RABBITMQ_DEFAULT_USER
          value: root
        - name: RABBITMQ_DEFAULT_PASS
          value: '{{ .Values.db.password }}'
        volumeMounts:
        - name: conf
          mountPath: /etc/rabbitmq/
        - name: data
          mountPath: /var/lib/rabbitmq/
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 256Gi
      storageClassName: managed-nfs-storage
