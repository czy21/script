---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}
  labels:
    app: '{{ .Release.Name }}'
  namespace: '{{ .Release.Namespace }}'
spec:
  serviceName: {{ .Release.Name }}
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: '{{ .Release.Name }}'
  template:
    metadata:
      labels:
        app: '{{ .Release.Name }}'
    spec:
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: data-{{ .Release.Name }}
      containers:
        - name: {{ .Release.Name }}
          image: {{ .Values.registry.url }}/{{ .Values.registry.dir }}/kafka
          imagePullPolicy: Always
          ports:
            - containerPort: 9092
          env:
            - name: REPLICAS
              value: '{{ .Values.replicas }}'
            - name: SERVICE
              value: {{ .Release.Name }}
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: SHARE_DIR
              value: /mnt/kafka
          volumeMounts:
            - name: data
              mountPath: /mnt/kafka
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data-{{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 256Gi
  storageClassName: managed-nfs-storage