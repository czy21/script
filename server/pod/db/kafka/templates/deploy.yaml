---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: '{{ .Release.Name }}'
  namespace: '{{ .Release.Namespace }}'
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: '{{ .Release.Name }}'
  serviceName: '{{ .Release.Name }}-hs'
  template:
    metadata:
      labels:
        app: '{{ .Release.Name }}'
    spec:
      containers:
        - name: '{{ .Release.Name }}'
          image: {{ .Values.registry.url }}/{{ .Values.registry.dir }}/kafka
          imagePullPolicy: Always
          args:
            - "--override broker.id=${HOSTNAME##*-} \
               --override zookeeper.connect={{ .Values.zk.connect }} \
               --override host.name=$(POD_NAME).{{ .Release.Name }}-hs.{{ .Release.Namespace }}.svc.cluster.local \
               --override listeners=INTERNAL://:9093,CLIENT://:9092 \
               --override advertised.listeners=INTERNAL://$(POD_NAME).{{ .Release.Name }}-hs.{{ .Release.Namespace }}.svc.cluster.local:9093,CLIENT://$(POD_NAME).{{ .Release.Name }}-hs.{{ .Release.Namespace }}.svc.cluster.local:9092 \
               --override listener.security.protocol.map=INTERNAL:PLAINTEXT,CLIENT:PLAINTEXT \
               --override inter.broker.listener.name=INTERNAL"
          ports:
          - name: tcp-client
            containerPort: 9092
          - name: tcp-internal
            containerPort: 9093
          env: 
           - name: POD_NAME
             valueFrom:
               fieldRef:
                 fieldPath: metadata.name
           - name: JMX_PORT
             value: "9999"
          volumeMounts:
            - name: data
              mountPath: /opt/kafka/logs/
              subPath: logs
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 256Gi
      storageClassName: managed-nfs-storage
