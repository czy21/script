apiVersion: v1
kind: Service
metadata:
  name: eureka
  namespace: stable
spec:
  selector:
    app: eureka
  type: NodePort
  ports:
    - name: "http"
      port: 8761
      targetPort: 8761
      nodePort: 8761
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: eureka
  namespace: stable
  labels:
    app: eureka
data:
  application.yml: |
    server:
      port: 8761
    spring:
      application:
        name: eureka
    eureka:
      instance:
        hostname: 0.0.0.0
      client:
        serviceUrl:
          defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/
        registerWithEureka: false
        fetchRegistry: false



---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: eureka
  namespace: stable
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: eureka
  template:
    metadata:
      labels:
        app: eureka
    spec:
      volumes:
        - name: conf
          configMap:
            name: eureka
            items:
              - key: "application.yml"
                path: "application.yml"
      containers:
        - name: eureka
          image: registry:5000/eureka-dev:dev-bruce
          imagePullPolicy: Always
          ports:
            - containerPort: 8761
          volumeMounts:
            - name: conf
              mountPath: /home/app/config/
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data-eureka
  namespace: stable
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 256Gi
  storageClassName: "managed-nfs-storage"
