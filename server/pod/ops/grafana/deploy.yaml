---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: monitoring
spec:
  selector:
    app: grafana
  type: NodePort
  ports:
    - name: "3000"
      port: 3000
      targetPort: 3000
      nodePort: 3000
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana
  namespace: monitoring
  labels:
    app: grafana
data:
  grafana.ini: |
    
  datasource.yaml: |
    apiVersion: 1
    datasources:
    - name: Prometheus
      type: prometheus
      access: proxy
      url: http://prometheus.monitoring.svc:9090
  dashboard.yaml: |
    apiVersion: 1
    providers:
    - name: '0'
      orgId: 1
      folder: ''
      type: file
      editable: true
      updateIntervalSeconds: 10
      allowUiUpdates: false
      options:
        path: /etc/grafana/provisioning/dashboards/definition/
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring
spec:
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      volumes:
        - name: conf
          configMap:
            name: grafana
            items:
              - key: grafana.ini
                path: grafana.ini
              - key: datasource.yaml
                path: provisioning/datasources/datasource.yaml
              - key: dashboard.yaml
                path: provisioning/dashboards/dashboard.yaml
        - name: data
          persistentVolumeClaim:
            claimName: data-grafana
      containers:
        - name: grafana
          image: grafana/grafana
          ports:
            - containerPort: 3000
          volumeMounts:
            - name: conf
              mountPath: /etc/grafana/
            - name: data
              mountPath: /var/lib/grafana/
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data-grafana
  namespace: monitoring
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 256Gi
  storageClassName: "managed-nfs-storage"
