apiVersion: v1
kind: Service
metadata:
  name: gateway
  namespace: stable
spec:
  selector:
    app: gateway
  type: ClusterIP
  ports:
    - name: "8080"
      port: 8080
      targetPort: 8080
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: gateway
  namespace: stable
  labels:
    app: gateway
data:
  application.yml: |
    server:
      port: 8080
    spring:
      cloud:
        gateway:
          routes:
            - id: portal
              uri: http://localhost:8080
              predicates:
                - Path=/portal/**

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway
  namespace: stable
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: gateway
  template:
    metadata:
      labels:
        app: gateway
    spec:
      volumes:
        - name: conf
          configMap:
            name: gateway
            items:
              - key: "application.yml"
                path: "application.yml"
      containers:
        - name: gateway
          image: registry:5000/gateway-dev:dev-bruce
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:
            - name: ENV_NAME
              value: dev
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          volumeMounts:
            - name: conf
              mountPath: /home/app/config/
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data-gateway
  namespace: stable
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 256Gi
  storageClassName: "managed-nfs-storage"
