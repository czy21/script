apiVersion: v1
kind: Service
metadata:
  name: spring-mybatis
spec:
  selector:
    app: spring-mybatis
  type: NodePort
  ports:
    - name: "8080"
      port: 8080
      targetPort: 8080
      nodePort: 8076
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: spring-mybatis
  labels:
    app: spring-mybatis
data:
  application.yml: |
    server:
      port: 8080
    spring:
      datasource:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://192.168.2.21:3306/erp_local?user=admin&password=Czy.190815&serverTimezone=Asia/Shanghai&characterEncoding=utf8&useSSL=false&useUnicode=true
        hikari:
          minimum-idle: 5
          maximum-pool-size: 20
          max-lifetime: 1800000
          connection-test-query: select 1
          connection-timeout: 30000

      data:
        mongodb:
          uri: mongodb://admin:Czy.190815@127.0.0.1:27017/erp_local?authSource=admin
    mybatis:
      mapper-locations: classpath*:mapper/**/**.xml
      configuration:
        map-underscore-to-camel-case: true

    logging:
      level:
        org.springframework.jdbc.core: debug
    #    com.learning.mapper: debug

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-mybatis
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: spring-mybatis
  template:
    metadata:
      labels:
        app: spring-mybatis
    spec:
      volumes:
        - name: conf
          configMap:
            name: spring-mybatis
            items:
              - key: "application.yml"
                path: "application.yml"
      containers:
        - name: spring-mybatis
          image: registry:5000/spring-mybatis:master
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: conf
              mountPath: /home/app/config/
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data-spring-mybatis
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 256Gi
  storageClassName: "managed-nfs-storage"
