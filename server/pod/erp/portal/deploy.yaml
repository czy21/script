apiVersion: v1
kind: Service
metadata:
  name: backend-portal
  namespace: erp
spec:
  selector:
    app: backend-portal
  type: ClusterIP
  ports:
    - name: "8080"
      port: 8080
      targetPort: 8080
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-portal
  namespace: erp
  labels:
    app: backend-portal
data:
  application.yml: |
    server:
      port: 8080
    spring:
      application:
        name: portal
      config:
        import: consul:consul.cluster2.com:80
      cloud:
        consul:
          config:
            format: yaml
            prefixes: ${ENV_NAME}
            default-context: ${spring.application.name}
            enabled: true

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-portal
  namespace: erp
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: backend-portal
  template:
    metadata:
      labels:
        app: backend-portal
    spec:
      volumes:
        - name: conf
          configMap:
            name: backend-portal
            items:
              - key: "application.yml"
                path: "application.yml"
      containers:
        - name: backend-portal
          image: registry.cluster2.com/erp-backend-portal:dev-bruce
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:
            - name: ENV_NAME
              value: dev
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          volumeMounts:
            - name: conf
              mountPath: /home/app/config/
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data-backend-portal
  namespace: erp
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 256Gi
  storageClassName: "managed-nfs-storage"
