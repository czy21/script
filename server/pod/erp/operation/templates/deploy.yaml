---
apiVersion: v1
kind: Service
metadata:
  name: '{{ .Release.Name }}'
  namespace: '{{ .Release.Namespace }}'
spec:
  selector:
    app: {{ .Release.Name }}
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: '{{ .Release.Name }}'
  namespace: '{{ .Release.Namespace }}'
  labels:
    app: {{ .Release.Name }}
data:
  nginx.conf: |
    user  nginx;
    worker_processes  auto;

    error_log  /var/log/nginx/error.log notice;
    pid        /var/run/nginx.pid;

    events {
        worker_connections  1024;
    }

    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

        access_log  /var/log/nginx/access.log  main;

        sendfile        on;
        #tcp_nopush     on;

        keepalive_timeout  65;

        #gzip  on;

        include /etc/nginx/conf.d/*-http.conf;
    }
    stream {
        include /etc/nginx/conf.d/*-stream.conf;
    }
  app-http.conf: |
    server {
        listen       80;
        server_name  localhost;

        set $real_proto $http_x_forwarded_proto;
        if ($real_proto ~ "^$") {
            set $real_proto $scheme;
        }
        set $real_ip $http_x_real_ip;
        if ($real_ip ~ "^$") {
            set $real_ip $remote_addr;
        }
        set $real_host $http_x_forwarded_host;
        if ($real_host ~ "^$") {
            set $real_host $host;
        }
        set $real_port $http_x_forwarded_port;
        if ($real_port ~ "^$") {
            set $real_port $server_port;
        }

        location / {
            root /usr/share/nginx/web/;
            index index.html;
            try_files $uri $uri/ /index.html;
        }

        location /api/ {
            proxy_http_version 1.1;
            proxy_set_header X-Forwarded-Proto $real_proto;
            proxy_set_header X-Forwarded-Host $real_host;
            proxy_set_header X-Forwarded-Port $real_port;
            proxy_set_header X-Forwarded-Server $host;
            proxy_set_header X-Real-IP $real_ip;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $http_connection;
            proxy_cache_bypass $http_upgrade;
            proxy_pass http://backend-gateway.erp.svc:8080/;
        }
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: '{{ .Release.Name }}'
  namespace: '{{ .Release.Namespace }}'
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      volumes:
      - name: nginx-conf
        configMap:
          name: '{{ .Release.Name }}'
          items:
          - key: nginx.conf
            path: nginx.conf
      - name: conf
        configMap:
          name: '{{ .Release.Name }}'
          items:
          - key: app-http.conf
            path: app-http.conf
      - name: log
        persistentVolumeClaim:
          claimName: data-{{ .Release.Name }}
      containers:
      - name: '{{ .Release.Name }}'
        image: {{ .Values.registry.url }}/{{ .Values.registry.dir }}/{{ .Release.Namespace }}-{{ .Release.Name }}:{{ .Values.imageTag }}
        imagePullPolicy: Always
        ports:
        - containerPort: 80
        - containerPort: 443
        volumeMounts:
        - name: nginx-conf
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        - name: conf
          mountPath: /etc/nginx/conf.d/
        - name: log
          mountPath: /var/log/nginx/
          subPath: log
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data-{{ .Release.Name }}
  namespace: '{{ .Release.Namespace }}'
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 256Gi
  storageClassName: managed-nfs-storage
