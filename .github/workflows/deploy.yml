# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Deploy Doc to Pages

on:
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
      - run: pip install -r server/requirements.txt
      - run: |
          ssh-keygen -t ed25519 -f ~/.ssh/whatever -N ''
          cat > ~/.ssh/config <<EOF
            Host host.example
            User $USER
            HostName 127.0.0.1
            IdentityFile ~/.ssh/whatever
          EOF
          echo -n 'from="127.0.0.1" ' | cat - ~/.ssh/whatever.pub > ~/.ssh/authorized_keys
          echo "Before fixing permissions on authorized_keys, notice home directory is world read/write"
          ls -la ~/.ssh
          ssh -o 'StrictHostKeyChecking no' host.example id || echo "ssh failed as expected... trying to fix permissions"
          chmod og-rw ~
          echo "After fixing permissions on home folder ~ ..."
          ls -la ~/.ssh
          ssh -o 'StrictHostKeyChecking no' host.example id
          ssh-keygen -t dsa -P '' -f ~/.ssh/id_dsa
          cat ~/.ssh/id_dsa.pub >> ~/.ssh/authorized_keys
          ssh localhost 'pwd;ls -al'
  #     - name: Setup Pages
  #       id: pages
  #       uses: actions/configure-pages@v3
  #     - name: Build with Mkdocs
  #       run: mkdocs build -d build/doc
  #     - name: Upload artifact
  #       uses: actions/upload-pages-artifact@v1
  #       with:
  #         path: ./build/doc

  # # Deployment job
  # deploy:
  #   environment:
  #     name: github-pages
  #     url: ${{ steps.deployment.outputs.page_url }}
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Deploy to GitHub Pages
  #       id: deployment
  #       uses: actions/deploy-pages@v2
